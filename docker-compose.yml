version: "2.4"
# Advantech Jetson™ LLM LlamaCPP AI development Docker Compose file 
# Created and maintained by Samir Singh <samir.singh@advantech.com>
# This Docker Compose file configures the Jetson™ LLM LlamaCPP AI Development Container
# with all necessary hardware acceleration settings.
# Copyright (c) 2025 Advantech Corporation. All rights reserved.
services:
  llama-cpp-service:
      image: harbor.edgesync.cloud/nagarro-container-images/llm-llama.cpp-on-nvidia-jetson:v1
      container_name: LLM-Llama.cpp-on-NVIDIA-Jetson
      env_file: .env
      privileged: true
      network_mode: host
      runtime: nvidia
      tty: true
      stdin_open: true
      entrypoint: ["/bin/bash"]
      restart: always
      labels:
        maintainer: "Samir Singh <samir.singh@advantech.com>"
        vendor: "Advantech"
        version: "1.2"
        description: "Jetson™ LLM LlamaCPP AI Development Container"
      environment:
        - NVIDIA_VISIBLE_DEVICES=all
        - NVIDIA_DRIVER_CAPABILITIES=all,compute,video,utility,graphics
      volumes:
        - ./llama-cpp-service/models:/workspace/models
        - ./wise-bench.sh:/workspace/wise-bench.sh
        - /etc/nv_tegra_release:/etc/nv_tegra_release
        - /usr/lib/aarch64-linux-gnu/tegra:/usr/lib/aarch64-linux-gnu/tegra
        - /usr/src/jetson_multimedia_api:/usr/src/jetson_multimedia_api
        - /usr/lib/aarch64-linux-gnu/gstreamer-1.0:/usr/lib/aarch64-linux-gnu/gstreamer-1.0
        - /usr/local/cuda:/usr/local/cuda
      devices:
        - /dev/nvhost-ctrl
        - /dev/nvhost-ctrl-gpu
        - /dev/nvhost-prof-gpu
        - /dev/nvmap
        - /dev/nvhost-gpu
        - /dev/nvhost-as-gpu
        - /dev/nvhost-vic
        - /dev/nvhost-msenc
        - /dev/nvhost-nvdec
        - /dev/nvhost-nvjpg
        - /dev/nvgpu/igpu0

  openweb-ui-service:
    image: ghcr.io/open-webui/open-webui:0.6.5
    container_name: openweb-ui-service
    env_file: .env
    network_mode: host
    environment:
      OPENAI_API_BASE_URL: ${OPENAI_API_LLAMA_CPP_BASE}
      PORT: ${OPENWEBUI_PORT}
      ENABLE_TAGS_GENERATION: ${ENABLE_TAGS_GENERATION}
      ENABLE_TITLE_GENERATION: ${ENABLE_TITLE_GENERATION}
    volumes:
      - open-webui:/app/backend/data
    restart: always

volumes:
  open-webui:
    driver: local
